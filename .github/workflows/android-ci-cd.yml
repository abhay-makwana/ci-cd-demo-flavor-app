name: "Android CI/CD"

on:
  workflow_dispatch:
    branches:
      - main
      - dev-flight
      - staging-flight
    # can add push and pull_request here
  push:
    branches:
      - main
      - dev-flight
      - staging-flight # Trigger on pushes to the main, dev-flight, staging-flight branch
  pull_request:
    branches:
      - main 
      - dev-flight
      - staging-flight # Trigger on pull requests targeting the main, dev-flight, staging-flight branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node  
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Run Yarn Install
        run: npm install

      - name: Grant execute permission to gradlew
        run: chmod +x android/gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Determine Build Type and Flavor
        id: determine_build
        run: |
          BUILD_COMMAND=""
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "Building debug APK for dev branch"
            BUILD_COMMAND="./gradlew assembleDevDebug" # Assuming 'dev' flavor and 'debug' build type
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Building release APK for main branch"
            BUILD_COMMAND="./gradlew assembleLiverelease" # Assuming 'production' flavor and 'release' build type
            # Set up signing keys for release builds here (e.g., from secrets)
          elif [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
            echo "Building release APK for release branch"
            BUILD_COMMAND="./gradlew assembleProductionRelease" # Adjust as needed
            # Set up signing keys for release builds here
          else
            echo "Unsupported branch for APK generation."
            exit 1
          fi
          echo "build_command=$BUILD_COMMAND" >> $GITHUB_OUTPUT
                     
      - name: Build application
        run: |
             cd android
             ${{ steps.determine_build.outputs.build_command }}
            #  ./gradlew assembleLiverelease             

      - name: Upload application(for dev/main branches)
        if: contains(github.ref, 'main') || contains(github.ref, 'release/')
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/live/release/app-live-release.apk
          retention-days: 3
